kegg_rest <- function(rest_url) {
message('Reading KEGG annotation online: "', rest_url, '"...')
content <- yulab.utils::yread(rest_url)
content %<>% strsplit(., "\t") %>% do.call('rbind', .)
res <- data.frame(from=content[,1],
to=content[,2])
return(res)
}
kegg_list <- function(db, species = NULL) {
if (db == "pathway") {
url <- paste("https://rest.kegg.jp/list", db, species, sep="/")
} else {
## module do not need species
url <- paste("https://rest.kegg.jp/list", db, sep="/")
}
kegg_rest(url)
}
parse.eggNOG.KEGG("test_data/out.emapper.annotations")
？enrichKEGG
?enrichKEGG
library(magrittr)
parse.eggNOG.KEGG <- function(eggNOG.file, organism = NULL, ...) {
eggno <-load.eggNOG(eggNOG.file, ...)
anno.KEGG <- eggno |>
dplyr::filter(KEGG_Pathway != "-") |>
dplyr::select(Gene, KEGG_ko, KEGG_Pathway) |>
dplyr::mutate(KEGG_ko = gsub("ko:", "", KEGG_ko),
KEGG_Pathway = gsub("ko", "map", KEGG_Pathway)) |>
dplyr::group_by(Gene) |>
dplyr::summarise(KO=stringr::str_split(KEGG_ko, ","),
pathway=stringr::str_split(KEGG_Pathway, ",")) |>
tidyr::unnest(KO) |>
tidyr::unnest(pathway) |>
dplyr::distinct() |>
ungroup()
pathway.all <- kegg_list('pathway', species = organism)
colnames(pathway.all) <- c("pathway", "desc")
anno.KEGG <- anno.KEGG |>
dplyr::left_join(pathway.all, by = "pathway") |>
tidyr::drop_na()
return(
list(
TERM2GENE= anno.KEGG |> dplyr::select(pathway, Gene),
TERM2NAME = anno.KEGG |> dplyr::select(pathway, desc)
)
)
}
kegg_rest <- function(rest_url) {
message('Reading KEGG annotation online: "', rest_url, '"...')
content <- yulab.utils::yread(rest_url)
content %<>% strsplit(., "\t") %>% do.call('rbind', .)
res <- data.frame(from=content[,1],
to=content[,2])
return(res)
}
kegg_list <- function(db, species = NULL) {
if (db == "pathway") {
url <- paste("https://rest.kegg.jp/list", db, species, sep="/")
} else {
## module do not need species
url <- paste("https://rest.kegg.jp/list", db, sep="/")
}
kegg_rest(url)
}
parse.eggNOG.KEGG("test_data/out.emapper.annotations")
parse.eggNOG.KEGG("test_data/out.emapper.annotations", organism = "hsa")
parse.eggNOG.KEGG("test_data/out.emapper.annotations", organism = "bamy")
library(magrittr)
parse.eggNOG.KEGG <- function(eggNOG.file, organism = NULL, ...) {
eggno <-load.eggNOG(eggNOG.file, ...)
anno.KEGG <- eggno |>
dplyr::filter(KEGG_Pathway != "-") |>
dplyr::select(Gene, KEGG_ko, KEGG_Pathway) |>
dplyr::mutate(KEGG_ko = gsub("ko:", "", KEGG_ko),
KEGG_Pathway = gsub("ko", "map", KEGG_Pathway)) |>
dplyr::group_by(Gene) |>
dplyr::summarise(KO=stringr::str_split(KEGG_ko, ","),
pathway=stringr::str_split(KEGG_Pathway, ",")) |>
tidyr::unnest(KO) |>
tidyr::unnest(pathway) |>
dplyr::distinct() |>
ungroup()
pathway.all <- kegg_list('pathway', species = organism)
colnames(pathway.all) <- c("pathway", "desc")
return(pathway.all)
anno.KEGG <- anno.KEGG |>
dplyr::left_join(pathway.all, by = "pathway") |>
tidyr::drop_na()
#return(
#  list(
#    TERM2GENE= anno.KEGG |> dplyr::select(pathway, Gene),
#    TERM2NAME = anno.KEGG |> dplyr::select(pathway, desc)
#  )
#  )
}
kegg_rest <- function(rest_url) {
message('Reading KEGG annotation online: "', rest_url, '"...')
content <- yulab.utils::yread(rest_url)
content %<>% strsplit(., "\t") %>% do.call('rbind', .)
res <- data.frame(from=content[,1],
to=content[,2])
return(res)
}
kegg_list <- function(db, species = NULL) {
if (db == "pathway") {
url <- paste("https://rest.kegg.jp/list", db, species, sep="/")
} else {
## module do not need species
url <- paste("https://rest.kegg.jp/list", db, sep="/")
}
kegg_rest(url)
}
parse.eggNOG.KEGG("test_data/out.emapper.annotations", organism = "bamy")
parse.eggNOG.KEGG("test_data/out.emapper.annotations", organism = NULL)
parse.eggNOG.KEGG("test_data/out.emapper.annotations", organism = 'bamy')
parse.eggNOG.KEGG("test_data/out.emapper.annotations", organism = 'bamy')
library(magrittr)
parse.eggNOG.KEGG <- function(eggNOG.file, organism = NULL, ...) {
eggno <-load.eggNOG(eggNOG.file, ...)
anno.KEGG <- eggno |>
dplyr::filter(KEGG_Pathway != "-") |>
dplyr::select(Gene, KEGG_ko, KEGG_Pathway) |>
dplyr::mutate(KEGG_ko = gsub("ko:", "", KEGG_ko),
KEGG_Pathway = gsub("ko", "map", KEGG_Pathway)) |>
dplyr::group_by(Gene) |>
dplyr::summarise(KO=stringr::str_split(KEGG_ko, ","),
pathway=stringr::str_split(KEGG_Pathway, ",")) |>
tidyr::unnest(KO) |>
tidyr::unnest(pathway) |>
dplyr::distinct() |>
ungroup()
pathway.all <- kegg_list('pathway', species = organism)
colnames(pathway.all) <- c("pathway", "desc")
if (!is.null(organism)) {
return(anno.KEGG)
}
anno.KEGG <- anno.KEGG |>
dplyr::left_join(pathway.all, by = "pathway") |>
tidyr::drop_na()
#return(
#  list(
#    TERM2GENE= anno.KEGG |> dplyr::select(pathway, Gene),
#    TERM2NAME = anno.KEGG |> dplyr::select(pathway, desc)
#  )
#  )
}
kegg_rest <- function(rest_url) {
message('Reading KEGG annotation online: "', rest_url, '"...')
content <- yulab.utils::yread(rest_url)
content %<>% strsplit(., "\t") %>% do.call('rbind', .)
res <- data.frame(from=content[,1],
to=content[,2])
return(res)
}
kegg_list <- function(db, species = NULL) {
if (db == "pathway") {
url <- paste("https://rest.kegg.jp/list", db, species, sep="/")
} else {
## module do not need species
url <- paste("https://rest.kegg.jp/list", db, sep="/")
}
kegg_rest(url)
}
parse.eggNOG.KEGG("test_data/out.emapper.annotations", organism = 'bamy')
replace_letters <- function(input_string, new_letter) {
# 使用正则表达式匹配字母部分，并替换为指定的字母
result <- gsub("[A-Za-z]", new_letter, input_string, perl = TRUE)
return(result)
}
replace_letters('map02020', "bamy")
replace_letters <- function(input_string, new_letter) {
# 使用正则表达式匹配字母部分，并替换为指定的字母
result <- sub("^[a-zA-Z]+", new_letters, input_string)
return(result)
}
replace_letters('map02020', "bamy")
replace_letters <- function(input_string, new_letters) {
# 使用正则表达式匹配字母部分，并替换为指定的字母
result <- sub("^[a-zA-Z]+", new_letters, input_string)
return(result)
}
replace_letters('map02020', "bamy")
replace_letters('hsa02020', "bamy")
replace_spec <- function(input, new) {
result <- sub("^[a-zA-Z]+", new, input)
return(result)
}
replace_spec <- function(input, new) {
result <- sub("^[a-zA-Z]+", new, input)
return(result)
}
parse.eggNOG.KEGG <- function(eggNOG.file, organism = NULL, ...) {
eggno <-load.eggNOG(eggNOG.file, ...)
anno.KEGG <- eggno |>
dplyr::filter(KEGG_Pathway != "-") |>
dplyr::select(Gene, KEGG_ko, KEGG_Pathway) |>
dplyr::mutate(KEGG_ko = gsub("ko:", "", KEGG_ko),
KEGG_Pathway = gsub("ko", "map", KEGG_Pathway)) |>
dplyr::group_by(Gene) |>
dplyr::summarise(KO=stringr::str_split(KEGG_ko, ","),
pathway=stringr::str_split(KEGG_Pathway, ",")) |>
tidyr::unnest(KO) |>
tidyr::unnest(pathway) |>
dplyr::distinct() |>
ungroup()
pathway.all <- kegg_list('pathway', species = organism)
colnames(pathway.all) <- c("pathway", "desc")
if (!is.null(organism)) {
return(anno.KEGG |> mutate(pathway = replace_spec(pathway, organism)))
}
anno.KEGG <- anno.KEGG |>
dplyr::left_join(pathway.all, by = "pathway") |>
tidyr::drop_na()
#return(
#  list(
#    TERM2GENE= anno.KEGG |> dplyr::select(pathway, Gene),
#    TERM2NAME = anno.KEGG |> dplyr::select(pathway, desc)
#  )
#  )
}
kegg_rest <- function(rest_url) {
message('Reading KEGG annotation online: "', rest_url, '"...')
content <- yulab.utils::yread(rest_url)
content %<>% strsplit(., "\t") %>% do.call('rbind', .)
res <- data.frame(from=content[,1],
to=content[,2])
return(res)
}
kegg_list <- function(db, species = NULL) {
if (db == "pathway") {
url <- paste("https://rest.kegg.jp/list", db, species, sep="/")
} else {
## module do not need species
url <- paste("https://rest.kegg.jp/list", db, sep="/")
}
kegg_rest(url)
}
replace_spec <- function(input, new) {
result <- sub("^[a-zA-Z]+", new, input)
return(result)
}
parse.eggNOG.KEGG("test_data/out.emapper.annotations", organism = 'bamy')
parse.eggNOG.KEGG <- function(eggNOG.file, organism = NULL, ...) {
eggno <-load.eggNOG(eggNOG.file, ...)
anno.KEGG <- eggno |>
dplyr::filter(KEGG_Pathway != "-") |>
dplyr::select(Gene, KEGG_ko, KEGG_Pathway) |>
dplyr::mutate(KEGG_ko = gsub("ko:", "", KEGG_ko),
KEGG_Pathway = gsub("ko", "map", KEGG_Pathway)) |>
dplyr::group_by(Gene) |>
dplyr::summarise(KO=stringr::str_split(KEGG_ko, ","),
pathway=stringr::str_split(KEGG_Pathway, ",")) |>
tidyr::unnest(KO) |>
tidyr::unnest(pathway) |>
dplyr::distinct() |>
ungroup()
pathway.all <- kegg_list('pathway', species = organism)
colnames(pathway.all) <- c("pathway", "desc")
if (!is.null(organism)) {
anno.KEGG <- anno.KEGG |>
dplyr::mutate(pathway = replace_spec(pathway, organism)) |>
dplyr::filter(pathway %in% pathway.all[["pathway"]])
}
return(anno.KEGG)
anno.KEGG <- anno.KEGG |>
dplyr::left_join(pathway.all, by = "pathway") |>
tidyr::drop_na()
#return(
#  list(
#    TERM2GENE= anno.KEGG |> dplyr::select(pathway, Gene),
#    TERM2NAME = anno.KEGG |> dplyr::select(pathway, desc)
#  )
#  )
}
kegg_rest <- function(rest_url) {
message('Reading KEGG annotation online: "', rest_url, '"...')
content <- yulab.utils::yread(rest_url)
content %<>% strsplit(., "\t") %>% do.call('rbind', .)
res <- data.frame(from=content[,1],
to=content[,2])
return(res)
}
kegg_list <- function(db, species = NULL) {
if (db == "pathway") {
url <- paste("https://rest.kegg.jp/list", db, species, sep="/")
} else {
## module do not need species
url <- paste("https://rest.kegg.jp/list", db, sep="/")
}
kegg_rest(url)
}
replace_spec <- function(input, new) {
result <- sub("^[a-zA-Z]+", new, input)
return(result)
}
parse.eggNOG.KEGG("test_data/out.emapper.annotations", organism = 'bamy')
library(magrittr)
parse.eggNOG.KEGG <- function(eggNOG.file, organism = NULL, ...) {
eggno <-load.eggNOG(eggNOG.file, ...)
anno.KEGG <- eggno |>
dplyr::filter(KEGG_Pathway != "-") |>
dplyr::select(Gene, KEGG_ko, KEGG_Pathway) |>
dplyr::mutate(KEGG_ko = gsub("ko:", "", KEGG_ko),
KEGG_Pathway = gsub("ko", "map", KEGG_Pathway)) |>
dplyr::group_by(Gene) |>
dplyr::summarise(KO=stringr::str_split(KEGG_ko, ","),
pathway=stringr::str_split(KEGG_Pathway, ",")) |>
tidyr::unnest(KO) |>
tidyr::unnest(pathway) |>
dplyr::distinct() |>
ungroup()
pathway.all <- kegg_list('pathway', species = organism)
colnames(pathway.all) <- c("pathway", "desc")
if (!is.null(organism)) {
anno.KEGG <- anno.KEGG |>
dplyr::mutate(pathway = sub("^[a-zA-Z]+", organism, pathway)) |>
dplyr::filter(pathway %in% pathway.all[["pathway"]])
}
return(anno.KEGG)
anno.KEGG <- anno.KEGG |>
dplyr::left_join(pathway.all, by = "pathway") |>
tidyr::drop_na()
#return(
#  list(
#    TERM2GENE= anno.KEGG |> dplyr::select(pathway, Gene),
#    TERM2NAME = anno.KEGG |> dplyr::select(pathway, desc)
#  )
#  )
}
kegg_rest <- function(rest_url) {
message('Reading KEGG annotation online: "', rest_url, '"...')
content <- yulab.utils::yread(rest_url)
content %<>% strsplit(., "\t") %>% do.call('rbind', .)
res <- data.frame(from=content[,1],
to=content[,2])
return(res)
}
kegg_list <- function(db, species = NULL) {
if (db == "pathway") {
url <- paste("https://rest.kegg.jp/list", db, species, sep="/")
} else {
## module do not need species
url <- paste("https://rest.kegg.jp/list", db, sep="/")
}
kegg_rest(url)
}
replace_spec <- function(input, new) {
result <-
return(result)
}
parse.eggNOG.KEGG("test_data/out.emapper.annotations", organism = 'bamy')
library(magrittr)
parse.eggNOG.KEGG <- function(eggNOG.file, organism = NULL, ...) {
eggno <-load.eggNOG(eggNOG.file, ...)
anno.KEGG <- eggno |>
dplyr::filter(KEGG_Pathway != "-") |>
dplyr::select(Gene, KEGG_ko, KEGG_Pathway) |>
dplyr::mutate(KEGG_ko = gsub("ko:", "", KEGG_ko),
KEGG_Pathway = gsub("ko", "map", KEGG_Pathway)) |>
dplyr::group_by(Gene) |>
dplyr::summarise(KO=stringr::str_split(KEGG_ko, ","),
pathway=stringr::str_split(KEGG_Pathway, ",")) |>
tidyr::unnest(KO) |>
tidyr::unnest(pathway) |>
dplyr::distinct() |>
ungroup()
pathway.all <- kegg_list('pathway', species = organism)
colnames(pathway.all) <- c("pathway", "desc")
if (!is.null(organism)) {
anno.KEGG <- anno.KEGG |>
dplyr::mutate(pathway = sub("^[a-zA-Z]+", organism, pathway)) |>
dplyr::filter(pathway %in% pathway.all[["pathway"]])
}
anno.KEGG <- anno.KEGG |>
dplyr::left_join(pathway.all, by = "pathway") |>
tidyr::drop_na()
return(
list(
TERM2GENE= anno.KEGG |> dplyr::select(pathway, Gene),
TERM2NAME = anno.KEGG |> dplyr::select(pathway, desc)
)
)
}
kegg_rest <- function(rest_url) {
message('Reading KEGG annotation online: "', rest_url, '"...')
content <- yulab.utils::yread(rest_url)
content %<>% strsplit(., "\t") %>% do.call('rbind', .)
res <- data.frame(from=content[,1],
to=content[,2])
return(res)
}
kegg_list <- function(db, species = NULL) {
if (db == "pathway") {
url <- paste("https://rest.kegg.jp/list", db, species, sep="/")
} else {
## module do not need species
url <- paste("https://rest.kegg.jp/list", db, sep="/")
}
kegg_rest(url)
}
replace_spec <- function(input, new) {
result <-
return(result)
}
parse.eggNOG.KEGG("test_data/out.emapper.annotations", organism = 'bamy')
parse.eggNOG.KEGG("test_data/out.emapper.annotations")
parse.eggNOG.KEGG("test_data/out.emapper.annotations", organism = 'bamy')
parse.eggNOG.KEGG("test_data/out.emapper.annotations", organism = 'ptr')
parse.eggNOG.KEGG("test_data/out.emapper.annotations", organism = 'hsa')
parse.eggNOG.KEGG("test_data/out.emapper.annotations", organism = NULL)
parse.eggNOG.KEGG("test_data/out.emapper.annotations", organism = 'BAYY')
parse.eggNOG.KEGG("test_data/out.emapper.annotations", organism = 'bamy')
library(magrittr)
parse.eggNOG.KEGG <- function(eggNOG.file, organism = NULL, ...) {
eggno <-load.eggNOG(eggNOG.file, ...)
anno.KEGG <- eggno |>
dplyr::filter(KEGG_Pathway != "-") |>
dplyr::select(Gene, KEGG_ko, KEGG_Pathway) |>
dplyr::mutate(KEGG_ko = gsub("ko:", "", KEGG_ko),
KEGG_Pathway = gsub("ko", "map", KEGG_Pathway)) |>
dplyr::group_by(Gene) |>
dplyr::summarise(KO=stringr::str_split(KEGG_ko, ","),
pathway=stringr::str_split(KEGG_Pathway, ",")) |>
tidyr::unnest(KO) |>
tidyr::unnest(pathway) |>
dplyr::distinct() |>
ungroup()
pathway.all <- kegg_list('pathway', species = organism)
colnames(pathway.all) <- c("pathway", "name")
if (!is.null(organism)) {
anno.KEGG <- anno.KEGG |>
dplyr::mutate(pathway = sub("^[a-zA-Z]+", organism, pathway)) |>
dplyr::filter(pathway %in% pathway.all[["pathway"]])
}
anno.KEGG <- anno.KEGG |>
dplyr::left_join(pathway.all, by = "pathway") |>
tidyr::drop_na()
return(
list(
TERM2GENE= anno.KEGG |> dplyr::select(pathway, Gene),
TERM2NAME = anno.KEGG |> dplyr::select(pathway, desc)
)
)
}
kegg_rest <- function(rest_url) {
message('Reading KEGG annotation online: "', rest_url, '"...')
content <- yulab.utils::yread(rest_url)
content %<>% strsplit(., "\t") %>% do.call('rbind', .)
res <- data.frame(from=content[,1],
to=content[,2])
return(res)
}
kegg_list <- function(db, species = NULL) {
if (db == "pathway") {
url <- paste("https://rest.kegg.jp/list", db, species, sep="/")
} else {
## module do not need species
url <- paste("https://rest.kegg.jp/list", db, sep="/")
}
kegg_rest(url)
}
parse.eggNOG.KEGG("test_data/out.emapper.annotations", organism = 'bamy')
library(magrittr)
parse.eggNOG.KEGG <- function(eggNOG.file, organism = NULL, ...) {
eggno <-load.eggNOG(eggNOG.file, ...)
anno.KEGG <- eggno |>
dplyr::filter(KEGG_Pathway != "-") |>
dplyr::select(Gene, KEGG_ko, KEGG_Pathway) |>
dplyr::mutate(KEGG_ko = gsub("ko:", "", KEGG_ko),
KEGG_Pathway = gsub("ko", "map", KEGG_Pathway)) |>
dplyr::group_by(Gene) |>
dplyr::summarise(KO=stringr::str_split(KEGG_ko, ","),
pathway=stringr::str_split(KEGG_Pathway, ",")) |>
tidyr::unnest(KO) |>
tidyr::unnest(pathway) |>
dplyr::distinct() |>
ungroup()
pathway.all <- kegg_list('pathway', species = organism)
colnames(pathway.all) <- c("pathway", "name")
if (!is.null(organism)) {
anno.KEGG <- anno.KEGG |>
dplyr::mutate(pathway = sub("^[a-zA-Z]+", organism, pathway)) |>
dplyr::filter(pathway %in% pathway.all[["pathway"]])
}
anno.KEGG <- anno.KEGG |>
dplyr::left_join(pathway.all, by = "pathway") |>
tidyr::drop_na()
return(
list(
TERM2GENE= anno.KEGG |> dplyr::select(pathway, Gene),
TERM2NAME = anno.KEGG |> dplyr::select(pathway, name)
)
)
}
kegg_rest <- function(rest_url) {
message('Reading KEGG annotation online: "', rest_url, '"...')
content <- yulab.utils::yread(rest_url)
content %<>% strsplit(., "\t") %>% do.call('rbind', .)
res <- data.frame(from=content[,1],
to=content[,2])
return(res)
}
kegg_list <- function(db, species = NULL) {
if (db == "pathway") {
url <- paste("https://rest.kegg.jp/list", db, species, sep="/")
} else {
## module do not need species
url <- paste("https://rest.kegg.jp/list", db, sep="/")
}
kegg_rest(url)
}
parse.eggNOG.KEGG("test_data/out.emapper.annotations", organism = 'bamy')
