return(moduel.all)
if (!is.null(species)) {
anno.KEGG <- anno.KEGG |>
dplyr::mutate(pathway = sub("^[a-zA-Z]+", species, pathway)) |>
dplyr::filter(pathway %in% pathway.all[["pathway"]])
}
anno.KEGG <- anno.KEGG |>
dplyr::left_join(pathway.all, by = "pathway") |>
tidyr::drop_na()
return(
list(
TERM2GENE= anno.KEGG |> dplyr::select(pathway, Gene),
TERM2NAME = anno.KEGG |> dplyr::select(pathway, name)
)
)
}
parse.eggNOG.KEGGM("test_data/out.emapper.annotations")
s <- parse.eggNOG.KEGGM("test_data/out.emapper.annotations")
View(s)
parse.eggNOG.KEGGM <- function(eggNOG.file , ...) {
eggno <-load.eggNOG(eggNOG.file, ...)
kegg.df <- get.KEGG.annotation(eggno, use = "Module")
kegg.df <- kegg.df |>
dplyr::mutate(KEGG_ko = gsub("ko:", "", KEGG_ko)) |>
dplyr::group_by(Gene) |>
dplyr::summarise(KO=stringr::str_split(KEGG_ko, ","),
Module=stringr::str_split(KEGG_Module, ",")) |>
tidyr::unnest(KO) |>
tidyr::unnest(Module) |>
dplyr::distinct() |>
dplyr::ungroup()
moduel.all <- kegg_list('Module')
colnames(moduel.all) <- c("Module", "name")
kegg.df <- kegg.df |>
dplyr::left_join(moduel.all, by = "Module") |>
tidyr::drop_na()
return(
list(
TERM2GENE= kegg.df |> dplyr::select(Module, Gene),
TERM2NAME = kegg.df |> dplyr::select(Module, name)
)
)
}
s <- parse.eggNOG.KEGGM("test_data/out.emapper.annotations")
s
library(magrittr)
parse.eggNOG.KEGGM <- function(eggNOG.file , ...) {
eggno <-load.eggNOG(eggNOG.file, ...)
kegg.df <- get.KEGG.annotation(eggno, use = "Module")
kegg.df <- kegg.df |>
dplyr::mutate(KEGG_ko = gsub("ko:", "", KEGG_ko)) |>
dplyr::group_by(Gene) |>
dplyr::summarise(KO=stringr::str_split(KEGG_ko, ","),
Module=stringr::str_split(KEGG_Module, ",")) |>
tidyr::unnest(KO) |>
tidyr::unnest(Module) |>
dplyr::distinct() |>
dplyr::ungroup()
moduel.all <- kegg_list('Module') |> dplyr::distinct()
colnames(moduel.all) <- c("Module", "name")
kegg.df <- kegg.df |>
dplyr::left_join(moduel.all, by = "Module") |>
tidyr::drop_na()
return(
list(
TERM2GENE= kegg.df |> dplyr::select(Module, Gene),
TERM2NAME = kegg.df |> dplyr::select(Module, name)
)
)
}
s <- parse.eggNOG.KEGGM("test_data/out.emapper.annotations")
s
library(magrittr)
parse.eggNOG.KEGGM <- function(eggNOG.file , ...) {
eggno <-load.eggNOG(eggNOG.file, ...)
kegg.df <- get.KEGG.annotation(eggno, use = "Module")
kegg.df <- kegg.df |>
dplyr::mutate(KEGG_ko = gsub("ko:", "", KEGG_ko)) |>
dplyr::group_by(Gene) |>
dplyr::summarise(KO=stringr::str_split(KEGG_ko, ","),
Module=stringr::str_split(KEGG_Module, ",")) |>
tidyr::unnest(KO) |>
tidyr::unnest(Module) |>
dplyr::distinct() |>
dplyr::ungroup()
return(kegg.df)
moduel.all <- kegg_list('Module') |> dplyr::distinct()
colnames(moduel.all) <- c("Module", "name")
kegg.df <- kegg.df |>
dplyr::left_join(moduel.all, by = "Module") |>
tidyr::drop_na()
return(
list(
TERM2GENE= kegg.df |> dplyr::select(Module, Gene),
TERM2NAME = kegg.df |> dplyr::select(Module, name)
)
)
}
s <- parse.eggNOG.KEGGM("test_data/out.emapper.annotations")
View(s)
library(magrittr)
parse.eggNOG.KEGGM <- function(eggNOG.file , ...) {
eggno <-load.eggNOG(eggNOG.file, ...)
kegg.df <- get.KEGG.annotation(eggno, use = "Module")
kegg.df <- kegg.df |>
dplyr::mutate(KEGG_ko = gsub("ko:", "", KEGG_ko)) |>
dplyr::group_by(Gene) |>
dplyr::summarise(KO=stringr::str_split(KEGG_ko, ","),
Module=stringr::str_split(KEGG_Module, ",")) |>
tidyr::unnest(KO) |>
tidyr::unnest(Module) |>
dplyr::distinct() |>
dplyr::ungroup()
moduel.all <- kegg_list('Module')
colnames(moduel.all) <- c("Module", "name")
kegg.df <- kegg.df |>
dplyr::left_join(moduel.all, by = "Module") |>
tidyr::drop_na()
return(
list(
TERM2GENE= kegg.df |> dplyr::select(Module, Gene),
TERM2NAME = kegg.df |> dplyr::select(Module, name) |> dplyr::distinct()
)
)
}
s <- parse.eggNOG.KEGGM("test_data/out.emapper.annotations")
s
library(magrittr)
parse.eggNOG.KEGG <- function(eggNOG.file, species = NULL, ...) {
eggno <-load.eggNOG(eggNOG.file, ...)
kegg.df <- get.KEGG.annotation(eggno, use = "Pathway")
kegg.df <- kegg.df |>
dplyr::filter(KEGG_Pathway != "-") |>
dplyr::select(Gene, KEGG_ko, KEGG_Pathway) |>
dplyr::mutate(KEGG_ko = gsub("ko:", "", KEGG_ko),
KEGG_Pathway = gsub("ko", "map", KEGG_Pathway)) |>
dplyr::group_by(Gene) |>
dplyr::summarise(KO=stringr::str_split(KEGG_ko, ","),
pathway=stringr::str_split(KEGG_Pathway, ",")) |>
tidyr::unnest(KO) |>
tidyr::unnest(pathway) |>
dplyr::distinct() |>
dplyr::ungroup()
pathway.all <- kegg_list('pathway', species = species)
colnames(pathway.all) <- c("pathway", "name")
if (!is.null(species)) {
kegg.df <- kegg.df |>
dplyr::mutate(pathway = sub("^[a-zA-Z]+", species, pathway)) |>
dplyr::filter(pathway %in% pathway.all[["pathway"]])
}
kegg.df <- kegg.df |>
dplyr::left_join(pathway.all, by = "pathway") |>
tidyr::drop_na()
return(
list(
TERM2GENE= anno.KEGG |> dplyr::select(pathway, Gene),
TERM2NAME = anno.KEGG |> dplyr::select(pathway, name) |> dplyr::distinct()
)
)
}
parse.eggNOG.KEGG("test_data/out.emapper.annotations")
parse.eggNOG.KEGG("test_data/out.emapper.annotations")
parse.eggNOG.KEGG <- function(eggNOG.file, species = NULL, ...) {
eggno <-load.eggNOG(eggNOG.file, ...)
kegg.df <- get.KEGG.annotation(eggno, use = "Pathway")
kegg.df <- kegg.df |>
dplyr::filter(KEGG_Pathway != "-") |>
dplyr::select(Gene, KEGG_ko, KEGG_Pathway) |>
dplyr::mutate(KEGG_ko = gsub("ko:", "", KEGG_ko),
KEGG_Pathway = gsub("ko", "map", KEGG_Pathway)) |>
dplyr::group_by(Gene) |>
dplyr::summarise(KO=stringr::str_split(KEGG_ko, ","),
pathway=stringr::str_split(KEGG_Pathway, ",")) |>
tidyr::unnest(KO) |>
tidyr::unnest(pathway) |>
dplyr::distinct() |>
dplyr::ungroup()
pathway.all <- kegg_list('pathway', species = species)
colnames(pathway.all) <- c("pathway", "name")
if (!is.null(species)) {
kegg.df <- kegg.df |>
dplyr::mutate(pathway = sub("^[a-zA-Z]+", species, pathway)) |>
dplyr::filter(pathway %in% pathway.all[["pathway"]])
}
kegg.df <- kegg.df |>
dplyr::left_join(pathway.all, by = "pathway") |>
tidyr::drop_na()
return(
list(
TERM2GENE= kegg.df |> dplyr::select(pathway, Gene),
TERM2NAME = kegg.df |> dplyr::select(pathway, name) |> dplyr::distinct()
)
)
}
parse.eggNOG.KEGG("test_data/out.emapper.annotations")
parse.eggNOG.KEGG <- function(eggNOG.file, species = NULL, ...) {
eggno <-load.eggNOG(eggNOG.file, ...)
kegg.df <- get.KEGG.annotation(eggno, use = "Pathway")
kegg.df <- kegg.df |>
dplyr::mutate(KEGG_ko = gsub("ko:", "", KEGG_ko),
KEGG_Pathway = gsub("ko", "map", KEGG_Pathway)) |>
dplyr::group_by(Gene) |>
dplyr::summarise(KO=stringr::str_split(KEGG_ko, ","),
pathway=stringr::str_split(KEGG_Pathway, ",")) |>
tidyr::unnest(KO) |>
tidyr::unnest(pathway) |>
dplyr::distinct() |>
dplyr::ungroup()
pathway.all <- kegg_list('pathway', species = species)
colnames(pathway.all) <- c("pathway", "name")
if (!is.null(species)) {
kegg.df <- kegg.df |>
dplyr::mutate(pathway = sub("^[a-zA-Z]+", species, pathway)) |>
dplyr::filter(pathway %in% pathway.all[["pathway"]])
}
kegg.df <- kegg.df |>
dplyr::left_join(pathway.all, by = "pathway") |>
tidyr::drop_na()
return(
list(
TERM2GENE= kegg.df |> dplyr::select(pathway, Gene),
TERM2NAME = kegg.df |> dplyr::select(pathway, name) |> dplyr::distinct()
)
)
}
parse.eggNOG.KEGGP <- function(eggNOG.file, species = NULL, ...) {
eggno <-load.eggNOG(eggNOG.file, ...)
kegg.df <- get.KEGG.annotation(eggno, use = "Pathway")
kegg.df <- kegg.df |>
dplyr::mutate(KEGG_ko = gsub("ko:", "", KEGG_ko),
KEGG_Pathway = gsub("ko", "map", KEGG_Pathway)) |>
dplyr::group_by(Gene) |>
dplyr::summarise(KO=stringr::str_split(KEGG_ko, ","),
pathway=stringr::str_split(KEGG_Pathway, ",")) |>
tidyr::unnest(KO) |>
tidyr::unnest(pathway) |>
dplyr::distinct() |>
dplyr::ungroup()
pathway.all <- kegg_list('pathway', species = species)
colnames(pathway.all) <- c("pathway", "name")
if (!is.null(species)) {
kegg.df <- kegg.df |>
dplyr::mutate(pathway = sub("^[a-zA-Z]+", species, pathway)) |>
dplyr::filter(pathway %in% pathway.all[["pathway"]])
}
kegg.df <- kegg.df |>
dplyr::left_join(pathway.all, by = "pathway") |>
tidyr::drop_na()
return(
list(
TERM2GENE= kegg.df |> dplyr::select(pathway, Gene),
TERM2NAME = kegg.df |> dplyr::select(pathway, name) |> dplyr::distinct()
)
)
}
parse.eggNOG.KEGGP("test_data/out.emapper.annotations")
parse.eggNOG.KEGGP("test_data/out.emapper.annotations", "bamy")
parse.eggNOG.KEGGP <- function(eggNOG.file, species = NULL, ...) {
eggno <-load.eggNOG(eggNOG.file, ...)
kegg.df <- get.KEGG.annotation(eggno, use = "Pathway")
kegg.df <- kegg.df |>
dplyr::mutate(KEGG_ko = gsub("ko:", "", KEGG_ko),
KEGG_Pathway = gsub("ko", "map", KEGG_Pathway)) |>
dplyr::group_by(Gene) |>
dplyr::summarise(KO=stringr::str_split(KEGG_ko, ","),
pathway=stringr::str_split(KEGG_Pathway, ",")) |>
tidyr::unnest(KO) |>
tidyr::unnest(pathway) |>
dplyr::distinct() |>
dplyr::ungroup()
pathway.all <- kegg_list('pathway', species = species)
colnames(pathway.all) <- c("pathway", "name")
if (!is.null(species)) {
kegg.df <- kegg.df |>
dplyr::mutate(pathway = sub("^[a-zA-Z]+", species, pathway)) |>
dplyr::filter(pathway %in% pathway.all[["pathway"]])
}
kegg.df <- kegg.df |>
dplyr::left_join(pathway.all, by = "pathway") |>
tidyr::drop_na()
return(
list(
TERM2GENE= kegg.df |> dplyr::select(pathway, Gene),
TERM2NAME = kegg.df |> dplyr::select(pathway, name) |> dplyr::distinct()
)
)
}
use_r("parse_GO")
use_r("parse_KEGGR")
use_r("parse_KEGGP")
use_r("parse_KEGGR")
use_r("parse_KEGGM")
parse.eggNOG.KEGGR <- function(eggNOG.file, species = NULL, ...) {
eggno <-load.eggNOG(eggNOG.file, ...)
kegg.df <- get.KEGG.annotation(eggno, use = "Reaction")
kegg.df <- kegg.df |>
dplyr::mutate(KEGG_ko = gsub("ko:", "", KEGG_ko)) |>
dplyr::group_by(Gene) |>
dplyr::summarise(KO=stringr::str_split(KEGG_ko, ","),
Reaction=stringr::str_split(KEGG_Reaction, ",")) |>
tidyr::unnest(KO) |>
tidyr::unnest(Reaction) |>
dplyr::distinct() |>
dplyr::ungroup()
return(kegg.df)
pathway.all <- kegg_list('pathway', species = species)
colnames(pathway.all) <- c("pathway", "name")
if (!is.null(species)) {
kegg.df <- kegg.df |>
dplyr::mutate(pathway = sub("^[a-zA-Z]+", species, pathway)) |>
dplyr::filter(pathway %in% pathway.all[["pathway"]])
}
kegg.df <- kegg.df |>
dplyr::left_join(pathway.all, by = "pathway") |>
tidyr::drop_na()
return(
list(
TERM2GENE= kegg.df |> dplyr::select(pathway, Gene)  |> dplyr::distinct()
TERM2NAME = kegg.df |> dplyr::select(pathway, name) |> dplyr::distinct()
parse.eggNOG.KEGGR <- function(eggNOG.file, species = NULL, ...) {
eggno <-load.eggNOG(eggNOG.file, ...)
kegg.df <- get.KEGG.annotation(eggno, use = "Reaction")
kegg.df <- kegg.df |>
dplyr::mutate(KEGG_ko = gsub("ko:", "", KEGG_ko)) |>
dplyr::group_by(Gene) |>
dplyr::summarise(KO=stringr::str_split(KEGG_ko, ","),
Reaction=stringr::str_split(KEGG_Reaction, ",")) |>
tidyr::unnest(KO) |>
tidyr::unnest(Reaction) |>
dplyr::distinct() |>
dplyr::ungroup()
return(kegg.df)
}
parse.eggNOG.KEGGR
parse.eggNOG.KEGGR("test_data/out.emapper.annotations")
kegg_list("Reaction")
parse.eggNOG.KEGGR("./test_data/out.emapper.annotations")
parse.eggNOG.KEGGR <- function(eggNOG.file, species = NULL, ...) {
eggno <-load.eggNOG(eggNOG.file, ...)
kegg.df <- get.KEGG.annotation(eggno, use = "Reaction")
kegg.df <- kegg.df |>
dplyr::mutate(KEGG_ko = gsub("ko:", "", KEGG_ko)) |>
dplyr::group_by(Gene) |>
dplyr::summarise(KO=stringr::str_split(KEGG_ko, ","),
Reaction=stringr::str_split(KEGG_Reaction, ",")) |>
tidyr::unnest(KO) |>
tidyr::unnest(Reaction) |>
dplyr::distinct() |>
dplyr::ungroup()
reaction.all <- kegg_list('Reaction')
colnames(reaction.all) <- c("Reaction", "name")
kegg.df <- kegg.df |>
dplyr::left_join(pathway.all, by = "Reaction") |>
tidyr::drop_na()
return(
list(
TERM2GENE= kegg.df |> dplyr::select(Reaction, Gene)  |> dplyr::distinct(),
TERM2NAME = kegg.df |> dplyr::select(Reaction, name) |> dplyr::distinct()
)
)
}
parse.eggNOG.KEGGR("./test_data/out.emapper.annotations")
parse.eggNOG.KEGGR <- function(eggNOG.file, species = NULL, ...) {
eggno <-load.eggNOG(eggNOG.file, ...)
kegg.df <- get.KEGG.annotation(eggno, use = "Reaction")
kegg.df <- kegg.df |>
dplyr::mutate(KEGG_ko = gsub("ko:", "", KEGG_ko)) |>
dplyr::group_by(Gene) |>
dplyr::summarise(KO=stringr::str_split(KEGG_ko, ","),
Reaction=stringr::str_split(KEGG_Reaction, ",")) |>
tidyr::unnest(KO) |>
tidyr::unnest(Reaction) |>
dplyr::distinct() |>
dplyr::ungroup()
reaction.all <- kegg_list('Reaction')
colnames(reaction.all) <- c("Reaction", "name")
kegg.df <- kegg.df |>
dplyr::left_join(reaction.all, by = "Reaction") |>
tidyr::drop_na()
return(
list(
TERM2GENE= kegg.df |> dplyr::select(Reaction, Gene)  |> dplyr::distinct(),
TERM2NAME = kegg.df |> dplyr::select(Reaction, name) |> dplyr::distinct()
)
)
}
parse.eggNOG.KEGGR("./test_data/out.emapper.annotations")
library(devtools)
use_r("parse_KEGGEC")
load_all()
use_r("parse_KEGGM")
load_all()
kegg_list("EC")
library(magrittr)
kegg_list("EC")
er <- kegg_list("EC")
View(er)
parse.eggNOG.EC <- function(eggNOG.file, database = "KEGG"){
eggno <- load.eggNOG(eggNOG.file)
anno.EC <- eggno |>
dplyr::filter(EC != "-") |>
dplyr::group_by(Gene) |>
dplyr::summarise(EC=stringr::str_split(EC, ",")) |>
tidyr::unnest(EC)  |>
dplyr::ungroup()
if(database == "GotEnzymes") {
EC.num <-  anno.EC$EC |> unique()
EC.name <- lapply(EC.num, get.EC) |> unlist()
EC.name.df <- dplyr::tibble(
EC = EC.num,
name = EC.name
)
drop <- EC.name.df |>
dplyr::filter(name == "Not found from GotEnzymes") |>
dplyr::pull(EC)
}else{
EC.name.df <- kegg_list("EC")
colnames(EC.name.df) <- c("EC", "name")
}
TERM2GENE.df <- anno.EC |> dplyr::filter(!EC %in% drop)
TERM2NAME.df <- EC.name.df |> dplyr::filter(!EC %in% drop)
return(
list(
TERM2GENE = TERM2GENE.df,
TERM2NAME = TERM2NAME.df
)
)
}
get.EC <- function(ec.number) {
# databse: https://metabolicatlas.org/gotenzymes
# API: https://metabolicatlas.org/api/v2/#/GotEnzymes/gotEnzymesECInfo
#
url <- stringr::str_glue("https://metabolicatlas.org/api/v2/gotenzymes/ecs/{ec.number}")
ec.json <- RCurl::getURL(url)
print(url)
if (ec.json == 'Not Found') {
return("Not found from GotEnzymes")
}
ec.info <- jsonlite::fromJSON(ec.json)$info$name
if (!stringr::str_detect(ec.info, 'Transferred to', )) {
return(ec.info)
}else{
ec.num.new <-stringr::str_replace_all(ec.info,"Transferred to ", "")
if (stringr::str_detect(ec.num.new,  "and")) {
ec.num.new <- stringr::str_split("5.6.2.3 and 5.6.2.4", " and ") |> unlist()
ec.num.new <- ec.num.new[1]
}
warning(stringr::str_glue("{ec.number} --> {ec.info}"))
return(get.EC(ec.num.new))
}
}
parse.eggNOG.EC("test_data/out.emapper.annotations")
parse.eggNOG.EC <- function(eggNOG.file, database = "KEGG"){
eggno <- load.eggNOG(eggNOG.file)
anno.EC <- eggno |>
dplyr::filter(EC != "-") |>
dplyr::group_by(Gene) |>
dplyr::summarise(EC=stringr::str_split(EC, ",")) |>
tidyr::unnest(EC)  |>
dplyr::ungroup()
if(database == "GotEnzymes") {
EC.num <-  anno.EC$EC |> unique()
EC.name <- lapply(EC.num, get.EC) |> unlist()
EC.name.df <- dplyr::tibble(
EC = EC.num,
name = EC.name
)
drop <- EC.name.df |>
dplyr::filter(name == "Not found from GotEnzymes") |>
dplyr::pull(EC)
}else{
EC.name.df <- kegg_list("EC")
colnames(EC.name.df) <- c("EC", "name")
drop <- c()
}
TERM2GENE.df <- anno.EC |> dplyr::filter(!EC %in% drop)
TERM2NAME.df <- EC.name.df |> dplyr::filter(!EC %in% drop)
return(
list(
TERM2GENE = TERM2GENE.df,
TERM2NAME = TERM2NAME.df
)
)
}
get.EC <- function(ec.number) {
# databse: https://metabolicatlas.org/gotenzymes
# API: https://metabolicatlas.org/api/v2/#/GotEnzymes/gotEnzymesECInfo
#
url <- stringr::str_glue("https://metabolicatlas.org/api/v2/gotenzymes/ecs/{ec.number}")
ec.json <- RCurl::getURL(url)
print(url)
if (ec.json == 'Not Found') {
return("Not found from GotEnzymes")
}
ec.info <- jsonlite::fromJSON(ec.json)$info$name
if (!stringr::str_detect(ec.info, 'Transferred to', )) {
return(ec.info)
}else{
ec.num.new <-stringr::str_replace_all(ec.info,"Transferred to ", "")
if (stringr::str_detect(ec.num.new,  "and")) {
ec.num.new <- stringr::str_split("5.6.2.3 and 5.6.2.4", " and ") |> unlist()
ec.num.new <- ec.num.new[1]
}
warning(stringr::str_glue("{ec.number} --> {ec.info}"))
return(get.EC(ec.num.new))
}
}
parse.eggNOG.EC("test_data/out.emapper.annotations")
s <- parse.eggNOG.EC("test_data/out.emapper.annotations")
View(s)
res <- s$TERM2NAME
View(res)
